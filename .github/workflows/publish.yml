name: Publish

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Set release version"
        id: release
        run: echo "::set-output name=version::1.0.0-${GITHUB_SHA:0:5}"
      - uses: actions/checkout@v3.1.0

      - name: "Set up JDK"
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: "Set up GPG"
        run: echo -n "${GPG_PRIVATE_KEY}" | base64 --decode > ${GITHUB_WORKSPACE}/${GPG_KEY_ID}.gpg
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: "Gradle Build"
        run: ./gradlew build buildRpm buildDeb -Pversion=${{ steps.release.outputs.version }}
  
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release.outputs.version }}
          release_name: Release ${{ steps.release.outputs.version }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./allure-commandline/build/distributions/allure-commandline-${{ steps.release.outputs.version }}.zip
          asset_name: allure-${{ steps.release.outputs.version }}.zip
          asset_content_type: application/octet-stream
